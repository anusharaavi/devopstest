# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
  
    runs-on: ubuntu-latest
   # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
         node-version: 15.x
         npm-version: 7.x.X
   
  # Rest of your workflow steps...

      - run: npm ci
        working-directory: ./codebase/rdicidr-0.1.0/
      - run: npm run 
        working-directory: ./codebase/rdicidr-0.1.0/
      - run: npm install
        working-directory: ./codebase/rdicidr-0.1.0/
      - run: npm run lint
        working-directory: ./codebase/rdicidr-0.1.0/
      - run: npm install --save-dev prettier
        working-directory: ./codebase/rdicidr-0.1.0/
      - run: npm run prettier
        working-directory: ./codebase/rdicidr-0.1.0/
      - run: CI=true npm run test
        working-directory: ./codebase/rdicidr-0.1.0/
      - run: npm run build
        working-directory: ./codebase/rdicidr-0.1.0/
        
      - name: Check CI Pipeline Status
        run: |
          if [ $? -eq 0 ]; then
            echo "CI pipeline passed"
          else
            echo "CI pipeline failed"
            exit 1
          fi
               
              
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: docker://ghcr.io/kciter/aws-ecr-action:latest
      with:
        access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        account_id: ${{ secrets.AWS_ACCOUNT_ID }}
        repo: github_actions_images
        region: us-east-1
        tags: latest,${{ github.sha }}
        create_repo: true
        image_scanning_configuration: true
        
