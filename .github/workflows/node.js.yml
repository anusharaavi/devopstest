
name: Node.js CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
         node-version: 15.x
         npm-version: 7.x.X

      - run: npm ci          
             npm run
             npm install
             npm run lint
             npm install --save-dev prettier
             npm run prettier
             CI=true npm run test
             npm run build
        working-directory: ./codebase/rdicidr-0.1.0/
      - name: Check CI Pipeline Status
        run: |
          if [ $? -eq 0 ]; then
            echo "CI pipeline passed"
          else
            echo "CI pipeline failed"
            exit 1
          fi
  
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'
      - name: Set build number
        id: set-build-number
        run: echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV
      - name: Show build number
        run: echo ${{ env.BUILD_NUMBER }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and Push Docker image
        env:
          IMAGE_TAG: ${{ env.BUILD_NUMBER }}
        run: |
          cd ./codebase/rdicidr-0.1.0
          docker build -t github_actions_images:$IMAGE_TAG .
          docker tag github_actions_images:$IMAGE_TAG ${{ secrets.ECR_REGISTRY }}/github_actions_images:$IMAGE_TAG
          docker push ${{ secrets.ECR_REGISTRY }}/github_actions_images:$IMAGE_TAG

      - name: Checkout repository
        uses: actions/checkout@v2
      - name: checkout Repo and Update deployment and service YAML files
        run: |
          sed -i "s/ImageTag/${BUILD_NUMBER}/g" codebase/rdicidr-0.1.0/manifest/deployment.yml        
      - name: Create target directory
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git fetch
          git branch target-branch origin/main
          git checkout target-branch
          mkdir -p codebase/rdicidr-0.1.0/manifest            
      - name: Copy deployment.yml to target directory
        run: |
          git add codebase/rdicidr-0.1.0/manifest/deployment.yml

      - name: Commit and push changes
        run: |
          git commit -m "Update deployment and service YAML files"
     
